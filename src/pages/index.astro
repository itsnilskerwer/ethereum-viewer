---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
/* import { getCollection } from 'astro:content'; */
import FormattedDate from '../components/FormattedDate.astro';

// SPARQL QUERIES: Return all triples
   const query = `
    PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
	PREFIX dcterms: <http://purl.org/dc/terms/>
	PREFIX foaf:    <http://xmlns.com/foaf/0.1/>
	PREFIX gist:    <https://ontologies.semanticarts.com/o/gistCore/>
    CONSTRUCT WHERE { ?s ?p ?o . }
  `;  
  

  // MORE COMPLEX QUERIES


  // ALL TRIPLES FOR A PARTICULAR EIP e.g. EIP 100
/*   const query = `
  PREFIX dcterms: <http://purl.org/dc/terms/>
 CONSTRUCT WHERE { ?s dcterms:identifier "100" . } 
`;  */



// ALL DIFFS FOR A PARTICULAR EIP e.g. EIP 100


// ALL DIFFS BEFORE A PARTICULAR EIP e.g. EIP 100
	  

// ALL THE DATES THAT HAD COMMITS TO A PARTICULAR EIP e.g. EIP 100 AND THEIR RESPECTIVE CHANGES


// Authors of all EIPS in status: Standard Track 
/*  const query = `
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX gist: <https://ontologies.semanticarts.com/gist/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
CONSTRUCT 
WHERE {
  ?s dcterms:type "Standards Track" ;
     ?p ?o .
 
} 
		   `; */
		   
// todo:pecial handling for author blank nodes suboptimal
// works in the browser but not from http fetch
/*   const query = `
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX gist: <https://ontologies.semanticarts.com/gist/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
CONSTRUCT {
  ?s gist:hasParticipant ?author .
  ?author a gist:Agent ;
          foaf:name ?name ;
          foaf:mbox ?mbox .
	}
WHERE {
  ?s dcterms:type "Standards Track" ;
     ?p ?o ;
     gist:hasParticipant ?author .
  ?author foaf:name ?name ;
          foaf:mbox ?mbox .
} 	   
		   `;  */

// Retrieve all "Status: Active" EIPS and order in dcterms:date in Asc 
/*  const query = `
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX gist: <https://ontologies.semanticarts.com/gist/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

CONSTRUCT {
  ?eip dc:title ?title ;
       dc:date ?date .

}
WHERE {
  ?eip dcterms:type "Standards Track" ;
       dc:title ?title ;
       dc:date ?date .
}
ORDER BY ASC(?date)
 `; */
		   

  const url = "https://localhost:3030/EIPS/sparql";
  
  const response = await fetch(url, {
    method: "POST",
    headers: {
      "Content-Type": "application/sparql-query",
	  "Accept": "text/turtle"
    },
    body: query,
  });
  if (!response.ok) {
    throw new Error(`Response status: ${response.status}`);
  }
  console.log(response);
  const turtleData = await response.text(); // or .json() 
  // console.log(turtleData);



/* const posts = (await getCollection('blog')).sort(
	(a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
); */

---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			main {
				width: 960px;
			}
			ul {
				display: flex;
				flex-wrap: wrap;
				gap: 2rem;
				list-style-type: none;
				margin: 0;
				padding: 0;
			}
			ul li {
				width: calc(50% - 1rem);
			}
			ul li * {
				text-decoration: none;
				transition: 0.2s ease;
			}
			ul li:first-child {
				width: 100%;
				margin-bottom: 1rem;
				text-align: center;
			}
			ul li:first-child img {
				width: 100%;
			}
			ul li:first-child .title {
				font-size: 2.369rem;
			}
			ul li img {
				margin-bottom: 0.5rem;
				border-radius: 12px;
			}
			ul li a {
				display: block;
			}
			.title {
				margin: 0;
				color: rgb(var(--black));
				line-height: 1;
			}
			.date {
				margin: 0;
				color: rgb(var(--gray));
			}
			ul li a:hover h4,
			ul li a:hover .date {
				color: rgb(var(--accent));
			}
			ul a:hover img {
				box-shadow: var(--box-shadow);
			}
			@media (max-width: 720px) {
				ul {
					gap: 0.5em;
				}
				ul li {
					width: 100%;
					text-align: center;
				}
				ul li:first-child {
					margin-bottom: 0;
				}
				ul li:first-child .title {
					font-size: 1.563em;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<!-- <section>
				<ul>
					{ posts.map((post) => (
						<li>
							<a href={`/${post.slug}/`}>
								<img width={720} height={360} src={post.data.heroImage} alt="hero image" />
								<h4 class="title">{post.data.title}</h4>
								<p class="date">
									<FormattedDate date={post.data.pubDate} />
								</p>
							</a>
						</li>
					))}
				</ul>
			</section> -->
			<section>
				<h2>Turtle Textarea</h2>
				<p class="date"><FormattedDate date={new Date()} /></p>
				<textarea id="turtle-textarea" readonly>{turtleData}</textarea>
			</section>
		</main>
		<Footer />
	</body>
</html>

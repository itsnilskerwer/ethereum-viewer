---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';

// SPARQL QUERIES: Return all triples
  /*  const query = `
    PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
	PREFIX dcterms: <http://purl.org/dc/terms/>
	PREFIX foaf:    <http://xmlns.com/foaf/0.1/>
	PREFIX gist:    <https://ontologies.semanticarts.com/o/gistCore/>
    CONSTRUCT WHERE { ?s ?p ?o . }
  `;   */
  

  // MORE COMPLEX QUERIES


  // ALL TRIPLES FOR A PARTICULAR EIP e.g. EIP 100
/*   const query = `
  PREFIX dcterms: <http://purl.org/dc/terms/>
 CONSTRUCT WHERE { ?s dcterms:identifier "100" . } 
`;  */



// ALL DIFFS FOR A PARTICULAR EIP e.g. EIP 100


// ALL DIFFS BEFORE A PARTICULAR EIP e.g. EIP 100
	  

// ALL THE DATES THAT HAD COMMITS TO A PARTICULAR EIP e.g. EIP 100 AND THEIR RESPECTIVE CHANGES


// Authors of all EIPS in status: Standard Track 
/*  const query = `
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX gist: <https://ontologies.semanticarts.com/gist/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
CONSTRUCT 
WHERE {
  ?s dcterms:type "Standards Track" ;
     ?p ?o .
 
} 
		   `; */
		   
// todo:pecial handling for author blank nodes suboptimal
// works in the browser but not from http fetch
/*   const query = `
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX gist: <https://ontologies.semanticarts.com/gist/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
CONSTRUCT {
  ?s gist:hasParticipant ?author .
  ?author a gist:Agent ;
          foaf:name ?name ;
          foaf:mbox ?mbox .
	}
WHERE {
  ?s dcterms:type "Standards Track" ;
     ?p ?o ;
     gist:hasParticipant ?author .
  ?author foaf:name ?name ;
          foaf:mbox ?mbox .
} 	   
		   `;  */

// Retrieve all "Status: Active" EIPS and order in dcterms:date in Asc 
/*  const query = `
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX gist: <https://ontologies.semanticarts.com/gist/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

CONSTRUCT {
  ?eip dc:title ?title ;
       dc:date ?date .

}
WHERE {
  ?eip dcterms:type "Standards Track" ;
       dc:title ?title ;
       dc:date ?date .
}
ORDER BY ASC(?date)
 `; */
		   

/*   const url = "http://localhost:3030/EIPS/sparql";
  
  const response = await fetch(url, {
    method: "POST",
    headers: {
      "Content-Type": "application/sparql-query",
	  "Accept": "text/turtle"
    },
    body: query,
  });
  if (!response.ok) {
    throw new Error(`Response status: ${response.status}`);
  }
  console.log(response);
  const turtleData = await response.text(); // or .json() 

 */

const posts = await getCollection('blog');

---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			main {
				width: 960px;
			}
			section {
				padding: 1rem;
				border-radius: 12px;
				margin-bottom: 2rem;
				box-shadow: 0 2px 5px var(--box-shadow);
			}

			section h2 {
				font-size: 2rem;
				color: var(--text-color);
				margin-bottom: 1rem;
			}

			.instructions {
				text-align: left;
			}

			.instructions p {
				margin-bottom: 1rem;
				font-size: 1.2rem;
				line-height: 1.6;
			}

			.instructions summary {
				font-weight: bold;
				font-size: 1.5rem;
				cursor: pointer;
				margin-top: 1rem;
				color: var(--text-color);
			}

			.instructions details {
				margin-bottom: 1.5rem;
				padding: 1rem;
				border-radius: 8px;
				border: 1px solid rgb(var(--gray));
				text-align: left;
				box-shadow: 0 2px 4px var(--box-shadow);
			}

			.instructions summary:hover {
				color: var(--hover-color);
			}

			.instructions ul {
				list-style: none;
				padding: 0;
			}

			.instructions li {
				margin-bottom: 0.5rem;
				font-size: 1.1rem;
				color: var(--text-color);
			}

			ul {
				display: flex;
				flex-wrap: wrap;
				gap: 2rem;
				list-style-type: none;
				margin: 0;
				padding: 0;
			}
			ul li {
				width: calc(23% - 1rem);
			}
			ul li * {
				text-decoration: none;
				transition: 0.2s ease;
			}
			/* ul li:first-child {
				width: 100%;
				margin-bottom: 1rem;
				text-align: center;
			}
			ul li:first-child img {
				width: 100%;
			}
			ul li:first-child .title {
				font-size: 2.369rem;
			} */
			ul li img {
				margin-bottom: 0.5rem;
				border-radius: 12px;
			}
			ul li a {
				display: block;
			}
			.title {
				margin: 0;
				color: rgb(var(--black));
				line-height: 1;
			}
			.date {
				margin: 0;
				color: rgb(var(--gray));
			}
			ul li a:hover h4,
			ul li a:hover .date {
				color: rgb(var(--accent));
			}
			ul a:hover img {
				box-shadow: var(--box-shadow);
			}
			@media (max-width: 720px) {
				ul {
					gap: 0.5em;
				}
				ul li {
					width: 100%;
					text-align: center;
				}
				/* ul li:first-child {
					margin-bottom: 0;
				}
				ul li:first-child .title {
					font-size: 1.563em;
				} */
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<section>
				<h3>This website is a teaching resource to assist EIP research using Linked Data.</h3>
				<p class="date"><FormattedDate date={new Date()} /></p>
			</section>
		
			<section>
				<h5>Features</h3>
				<p/>
					<li>
						EIP Dataset in Turtle format that can be queried with SPARQL
					</li>
					<li>

					</li>
				</p>
			</section>
			  <section>
				<h5>Take part in the A/B Test Protocol:</h5>
				<div class="instructions">
				  <p>The goal of this test is to measure the ease of using this website as an EIP research tool. You have 30 minutes work on each Protocol. Please start with the Protocol that is displayed first (the order in which Protocols are displayed is randomized to reduce any order bias). Read and follow the instructions closely. After 30 minutes, click the link to fill out the survey.</p>
				  <details>
					<summary><span class="icon"></span>Instructions for Protocol A</summary>
					<p>First of all, get comfortable with the RDF and SPARQL concepts by reading through the provided Links, Examples and Explainers. The goal of this protocol is to use the provided RDF and SPARQL guidance to answer some questions about EIP XXX. If you feel ready, start a 30 min. timer and try to answer the following questions:</p>
					<ul>
					  <li>1. When was EIP XXX created?</li>
					  <li>2. List all authors that have worked on the EIP XXX resource?</li>
					  <li>3. What was the last update to this EIP resource?</li>
					</ul>
				  </details>
		
				  <details>
					<summary><span class="icon"></span>Instructions for Protocol B</summary>
					<p>First of all, get comfortable with the links provided on this website (e.g. Visit the official Ethereum EIP website). The goal of this protocol is for you to use all and any research tools that you usually would when conducting research. If you feel ready, start a 30 min. timer and try to answer the following questions:</p>
					<ul>
						<li>1. When was EIP XXX created?</li>
						<li>2. List all authors that have worked on the EIP XXX resource?</li>
						<li>3. What was the last update to this EIP resource?</li>
					</ul>
				  </details>
						</div>
			  </section>
			 <section>
				<h5>Learn about Linked Data keywords:</h5>
				<ul>
					{ posts.map((post: { slug: any; data: { heroImage: string | null | undefined; title: unknown; }; }) => (
						<li>
							<a href={`/${post.slug}/`}>
								<img width={720} height={360} src={post.data.heroImage} alt="hero image" />
								<h4 class="title">{post.data.title}</h4>
							</a>
						</li>
					))}
				</ul>
			</section> 
			
		</main>
		<Footer />
	</body>
</html>
